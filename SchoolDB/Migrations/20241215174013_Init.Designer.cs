// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolDB.Data;

#nullable disable

namespace SchoolDB.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20241215174013_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchoolDB.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<int>("EmployeeIdFk")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID_FK");

                    b.HasKey("AdminId")
                        .HasName("PK__Admins__719FE4E83F8D3CE7");

                    b.HasIndex("EmployeeIdFk");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("SchoolDB.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClassID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"));

                    b.Property<int>("AdminIdFk")
                        .HasColumnType("int")
                        .HasColumnName("AdminID_FK");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.HasKey("ClassId")
                        .HasName("PK__Classes__CB1927A08EEF8801");

                    b.HasIndex("AdminIdFk");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("SchoolDB.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.HasKey("CourseId")
                        .HasName("PK__Courses__C92D71874815D106");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("SchoolDB.Models.CourseAssignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AssignmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentId"));

                    b.Property<int>("CourseIdFk")
                        .HasColumnType("int")
                        .HasColumnName("CourseID_FK");

                    b.Property<int>("TeacherIdFk")
                        .HasColumnType("int")
                        .HasColumnName("TeacherID_FK");

                    b.HasKey("AssignmentId")
                        .HasName("PK__CourseAs__32499E57900CC94D");

                    b.HasIndex("CourseIdFk");

                    b.HasIndex("TeacherIdFk");

                    b.ToTable("CourseAssignments");
                });

            modelBuilder.Entity("SchoolDB.Models.CourseEnrolment", b =>
                {
                    b.Property<int>("EnrolmentsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EnrolmentsID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnrolmentsId"));

                    b.Property<int>("CourseIdFk")
                        .HasColumnType("int")
                        .HasColumnName("CourseID_FK");

                    b.Property<string>("Grade")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<int?>("GradeSetterFk")
                        .HasColumnType("int")
                        .HasColumnName("GradeSetter_FK");

                    b.Property<DateOnly?>("GradingDate")
                        .HasColumnType("date");

                    b.Property<int>("StudentIdFk")
                        .HasColumnType("int")
                        .HasColumnName("StudentID_FK");

                    b.HasKey("EnrolmentsId")
                        .HasName("PK__CourseEn__6DFB01469F6B8C58");

                    b.HasIndex("CourseIdFk");

                    b.HasIndex("GradeSetterFk");

                    b.HasIndex("StudentIdFk");

                    b.ToTable("CourseEnrolments");
                });

            modelBuilder.Entity("SchoolDB.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("EmployeeFirstName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("EmployeeLastName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.HasKey("EmployeeId")
                        .HasName("PK__Employee__7AD04FF1B77E07FF");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("SchoolDB.Models.EmployeeRole", b =>
                {
                    b.Property<int>("EmployeeRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeRoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeRoleId"));

                    b.Property<int>("EmployeeIdFk")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID_FK");

                    b.Property<int>("RoleIdFk")
                        .HasColumnType("int")
                        .HasColumnName("RoleID_FK");

                    b.HasKey("EmployeeRoleId")
                        .HasName("PK__Employee__346186869BE872EF");

                    b.HasIndex("EmployeeIdFk");

                    b.HasIndex("RoleIdFk");

                    b.ToTable("EmployeeRoles");
                });

            modelBuilder.Entity("SchoolDB.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE3AF4B1A459");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SchoolDB.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int>("ClassIdFk")
                        .HasColumnType("int")
                        .HasColumnName("ClassID_FK");

                    b.Property<string>("StudentFirstName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("StudentLastName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("StudentSsn")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("StudentSSN");

                    b.HasKey("StudentId")
                        .HasName("PK__Students__32C52A79F808D1C4");

                    b.HasIndex("ClassIdFk");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SchoolDB.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TeacherID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<int>("EmployeeIdFk")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID_FK");

                    b.HasKey("TeacherId")
                        .HasName("PK__Teachers__EDF25944B708041A");

                    b.HasIndex("EmployeeIdFk");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("SchoolDB.Models.Admin", b =>
                {
                    b.HasOne("SchoolDB.Models.Employee", "EmployeeIdFkNavigation")
                        .WithMany("Admins")
                        .HasForeignKey("EmployeeIdFk")
                        .IsRequired()
                        .HasConstraintName("FK__Admins__Employee__35BCFE0A");

                    b.Navigation("EmployeeIdFkNavigation");
                });

            modelBuilder.Entity("SchoolDB.Models.Class", b =>
                {
                    b.HasOne("SchoolDB.Models.Admin", "AdminIdFkNavigation")
                        .WithMany("Classes")
                        .HasForeignKey("AdminIdFk")
                        .IsRequired()
                        .HasConstraintName("FK__Classes__AdminID__36B12243");

                    b.Navigation("AdminIdFkNavigation");
                });

            modelBuilder.Entity("SchoolDB.Models.CourseAssignment", b =>
                {
                    b.HasOne("SchoolDB.Models.Course", "CourseIdFkNavigation")
                        .WithMany("CourseAssignments")
                        .HasForeignKey("CourseIdFk")
                        .IsRequired()
                        .HasConstraintName("FK__CourseAss__Cours__37A5467C");

                    b.HasOne("SchoolDB.Models.Teacher", "TeacherIdFkNavigation")
                        .WithMany("CourseAssignments")
                        .HasForeignKey("TeacherIdFk")
                        .IsRequired()
                        .HasConstraintName("FK__CourseAss__Teach__38996AB5");

                    b.Navigation("CourseIdFkNavigation");

                    b.Navigation("TeacherIdFkNavigation");
                });

            modelBuilder.Entity("SchoolDB.Models.CourseEnrolment", b =>
                {
                    b.HasOne("SchoolDB.Models.Course", "CourseIdFkNavigation")
                        .WithMany("CourseEnrolments")
                        .HasForeignKey("CourseIdFk")
                        .IsRequired()
                        .HasConstraintName("FK__CourseEnr__Cours__398D8EEE");

                    b.HasOne("SchoolDB.Models.Teacher", "GradeSetterFkNavigation")
                        .WithMany("CourseEnrolments")
                        .HasForeignKey("GradeSetterFk")
                        .HasConstraintName("FK__CourseEnr__Grade__3A81B327");

                    b.HasOne("SchoolDB.Models.Student", "StudentIdFkNavigation")
                        .WithMany("CourseEnrolments")
                        .HasForeignKey("StudentIdFk")
                        .IsRequired()
                        .HasConstraintName("FK__CourseEnr__Stude__3B75D760");

                    b.Navigation("CourseIdFkNavigation");

                    b.Navigation("GradeSetterFkNavigation");

                    b.Navigation("StudentIdFkNavigation");
                });

            modelBuilder.Entity("SchoolDB.Models.EmployeeRole", b =>
                {
                    b.HasOne("SchoolDB.Models.Employee", "EmployeeIdFkNavigation")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("EmployeeIdFk")
                        .IsRequired()
                        .HasConstraintName("FK__EmployeeR__Emplo__3C69FB99");

                    b.HasOne("SchoolDB.Models.Role", "RoleIdFkNavigation")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("RoleIdFk")
                        .IsRequired()
                        .HasConstraintName("FK__EmployeeR__RoleI__3D5E1FD2");

                    b.Navigation("EmployeeIdFkNavigation");

                    b.Navigation("RoleIdFkNavigation");
                });

            modelBuilder.Entity("SchoolDB.Models.Student", b =>
                {
                    b.HasOne("SchoolDB.Models.Class", "ClassIdFkNavigation")
                        .WithMany("Students")
                        .HasForeignKey("ClassIdFk")
                        .IsRequired()
                        .HasConstraintName("FK__Students__ClassI__3E52440B");

                    b.Navigation("ClassIdFkNavigation");
                });

            modelBuilder.Entity("SchoolDB.Models.Teacher", b =>
                {
                    b.HasOne("SchoolDB.Models.Employee", "EmployeeIdFkNavigation")
                        .WithMany("Teachers")
                        .HasForeignKey("EmployeeIdFk")
                        .IsRequired()
                        .HasConstraintName("FK__Teachers__Employ__3F466844");

                    b.Navigation("EmployeeIdFkNavigation");
                });

            modelBuilder.Entity("SchoolDB.Models.Admin", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("SchoolDB.Models.Class", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("SchoolDB.Models.Course", b =>
                {
                    b.Navigation("CourseAssignments");

                    b.Navigation("CourseEnrolments");
                });

            modelBuilder.Entity("SchoolDB.Models.Employee", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("EmployeeRoles");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("SchoolDB.Models.Role", b =>
                {
                    b.Navigation("EmployeeRoles");
                });

            modelBuilder.Entity("SchoolDB.Models.Student", b =>
                {
                    b.Navigation("CourseEnrolments");
                });

            modelBuilder.Entity("SchoolDB.Models.Teacher", b =>
                {
                    b.Navigation("CourseAssignments");

                    b.Navigation("CourseEnrolments");
                });
#pragma warning restore 612, 618
        }
    }
}
